name: staging

on:
  push:
    branches:
      - "staging"
    paths:
      - "**.rs"
      - .github/workflows/staging.yml

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown, x86_64-unknown-linux-gnu
          components: clippy, rustfmt
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install sea-orm-cli
        run: cargo install sea-orm-cli
      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
      - name: Check
        run: cargo check
      - name: build nsjail
        run: cd judger && just build-nsjail
      - name: build judger docker
        run: cd judger && release-docker
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Checkout submodule
        run: git submodule update --init --recursive
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown, x86_64-unknown-linux-gnu
          components: clippy, rustfmt
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install docker
        uses: docker-practice/actions-setup-docker@master
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build backend
        uses: docker/build-push-action@v5
        with:
          context: "backend"
          push: true
          tags: "staging"
          labels: "backend"
      - name: build migration
        uses: docker/build-push-action@v5
        with:
          context: "backend/migration"
          push: true
          tags: "staging"
          labels: "backend/migration"
      - name: build nsjail
        run: cd judger && just build-nsjail
      - name: build rlua-54
        run: cd judger && just release-docker
      - name: build judger
        uses: docker/build-push-action@v5
        with:
          context: "judger"
          push: true
          tags: "staging"
          labels: "judger"