name: staging-judger-publish

on:
  push:
    branches:
      - "staging"
    paths:
      - "judger/**"
      - .github/workflows/judger.yml

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Checkout submodule
        run: git submodule update --init --recursive
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown, x86_64-unknown-linux-gnu
          components: clippy, rustfmt
      - name: Set up nsjail cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            judger/nsjail-docker/output/x86_64-linux-musl
          key: ${{ runner.os }}-nsjail-${{ hashFiles('judger/nsjail-docker/Dockerfile.**') }}
          restore-keys: ${{ runner.os }}-nsjail-
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install docker
        uses: docker-practice/actions-setup-docker@master
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build nsjail
        run: cd judger && just build-nsjail
      - name: build rlua-54
        run: cd judger && just release-docker
      - name: build judger
        uses: docker/build-push-action@v5
        with:
          build-args: ARCH=x86_64
          context: .
          file: "./judger/Dockerfile"
          push: true
          tags: "ghcr.io/mdcpp/mdoj/judger:staging"
          labels: "judger"
          cache-from: type=gha
          cache-to: type=gha,mode=max
