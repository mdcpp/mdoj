[package]
name = "frontend"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
http = { version = "0.2", optional = true }
leptos = { version = "0.6", features = ["nightly"] }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_actix = { version = "0.6", optional = true }
leptos_router = { version = "0.6", features = ["nightly"] }
cfg-if = "1"
wasm-bindgen = "=0.2.92"
js-sys = "=0.3.69"
prost = { workspace = true }
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
tracing-web = "0.1.3"
toml = { workspace = true }
gloo = "0.11.0"
pulldown-cmark = "0.10.0"
tonic-web-wasm-client = "0.5.1"
serde_qs = "0.12.0"
serde_json = "1.0.120"
leptos_icons = "0.3.1"
wasm-bindgen-futures = "0.4.42"
icondata = "0.3.1"
turf = "0.9.2"
leptos_animated_for = "0.4.7"
num-traits = "0.2.19"
lol_alloc = "0.4.1"
leptos_query = "0.5.3"
cookie = "0.18.1"
leptos_query_devtools = "0.1.3"

[dependencies.uuid]
version = "1.7.0"
features = ["v4", "fast-rng"]

[dependencies.syntect]
version = "5.1.0"
default-features = false
features = ["default-fancy"]

[dependencies.web-sys]
version = "0.3.69"
features = ["HtmlDocument"]

[dependencies.leptos-use]
version = "0.10"
features = ["serde"]

[dependencies.tonic]
workspace = true
features = ["codegen", "prost", "channel"]

[dependencies.serde]
workspace = true

[dependencies.tokio]
workspace = true
optional = true
features = ["rt-multi-thread", "fs", "sync"]

[dependencies.grpc]
path = "../grpc"
features = ["backend", "client", "serde", "extra_trait"]

[dependencies.tailwind_fuse]
version = "0.3.1"
features = ["variant"]


[build-dependencies.tonic-build]
features = ["prost"]
workspace = true

[features]
csr = [
  "leptos/csr",
  "leptos_meta/csr",
  "leptos_router/csr",
  "uuid/js",
  "leptos_query/csr",
  "leptos_query_devtools/csr",
]
hydrate = [
  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
  "leptos_query/hydrate",
  # This is intended, hydrate feature for devtool is csr 
  "leptos_query_devtools/csr",
]
ssr = [
  "dep:actix-files",
  "dep:actix-web",
  "dep:leptos_actix",
  "dep:tokio",
  "tonic/transport",
  "grpc/transport",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "leptos-use/ssr",
  "leptos-use/actix",
  "leptos_query/ssr",
]
compress = []

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "mdoj"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# The tailwind config file.
#
# Optional, defaults to "tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "tailwind.config.js"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
